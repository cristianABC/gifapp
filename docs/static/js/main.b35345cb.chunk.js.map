{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","fetch","encodeURI","peticion","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","gif","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAiB9C,OAAS,0BAAMC,SAVM,SAACC,GAClBA,EAAMC,iBACFJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAOlB,2BACMO,KAAO,OACbC,MAAUT,EACVU,SAlBsB,SAACP,GACvBF,EAAcE,EAAMQ,OAAOF,YCLtBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,yBAAKC,UAAU,0CACd,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNAK,EAAO,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,4DACJ,mCADI,SAEIC,MAAM,0CAAD,OAA2CC,UAAUH,GAArD,6BADb,qCADI,cAEbI,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAYZY,GAZY,4CAAH,sDCKPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAZAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAItB,CAACb,IAGGc,EDbwBK,CAAanB,GAAhCU,EAFuB,EAE5BJ,KAAaO,EAFe,EAEfA,QAEpB,OACI,oCACI,wBAAIjB,UAAU,qCAAqCI,GAClDa,GAAW,uBAAGjB,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAIPc,EAAOF,KAAI,SAAAY,GAAG,OACd,kBAAC,EAAD,eACAC,IAAKD,EAAI3B,IACL2B,UEhBXE,EAAe,WAAM,MAEM3C,mBAAS,CAAC,oBAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAW9B,OACI,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEO6C,EAAWf,KAAK,SAAAR,GAAQ,OACxB,kBAAC,EAAD,CACAqB,IAAKrB,EACLA,SAAUA,U,MCnB5BwB,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b35345cb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return ( <form onSubmit = { handleSubmit } >\r\n        <\r\n        input type = \"text\"\r\n        value = { inputValue }\r\n        onChange = { handleInputChange }\r\n        /> \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n         <img src={url} alt={title}/>\r\n         <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n    const apiKey = 'b31Wf8jQxYwT7pJtcUfq89BelSK2EUkJ';\r\n    const peticion = await fetch(`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`);\r\n    const { data } = await peticion.json();\r\n    const gifs = data.map(img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n   \r\n    return (\r\n        <> \r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">  \r\n          \r\n            \r\n                {\r\n                    images.map(gif =>\r\n                    <GifGridItem \r\n                    key={gif.id}\r\n                    {...gif}/> )\r\n                }\r\n            \r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            });\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categories = ['One Punch', 'Dragon Ball' , 'Samurai x'];\r\n    const [categories, setCategories] = useState(['Super Campeones']);\r\n\r\n //   const handleAdd = () =>{\r\n   //     setCategories([...categories,  'SuperCampeones']);\r\n        //VariaciÃ³n\r\n        //setCategories(cats => [...cats, 'Super campeons']) donde \r\n        //cats => es el estado anterior\r\n    //}\r\n\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2> \r\n           <AddCategory setCategories={setCategories}/>\r\n           <hr></hr>\r\n           <ol>\r\n              {\r\n                  categories.map (category=> \r\n                  <GifGrid \r\n                  key={category}\r\n                  category={category}/>  \r\n                  )                 \r\n              }\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render( \n    <GifExpertApp/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}